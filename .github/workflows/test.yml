name: Test

on:
  pull_request:
    branches:
      - Split-CI/CD-pipeline

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: syslog
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        # Wait for the service to be ready
        options: --health-cmd="pg_isready -U postgres"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Run Unit Tests with Coverage
      run: |
        coverage run -m pytest tests/unit
        coverage report
        coverage html -d coverage_html  # Generate HTML report
        coverage xml -o coverage.xml  # Generate XML report

    - name: Run Integration Tests with Coverage
      run: |
        coverage run -m pytest tests/integration
        coverage report
        coverage html -d coverage_html_integration
        coverage xml -o coverage_integration.xml

    - name: Enforce Minimum Coverage Threshold
      run: |
        coverage run -m pytest tests
        coverage report --fail-under=80  # Adjust the threshold as needed
        coverage xml -o coverage.xml

    - name: Install GitHub CLI
      run: sudo apt-get install gh

    - name: Automatically merge the pull request
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_NUMBER=$(jq --raw-output .number < "$GITHUB_EVENT_PATH")
        gh pr merge $PR_NUMBER --squash --repo ${{ github.repository }} --admin --body "Merging PR automatically after passing tests."