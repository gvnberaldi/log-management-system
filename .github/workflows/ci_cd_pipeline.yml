name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: syslog
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        # Wait for the service to be ready
        options: --health-cmd="pg_isready -U postgres"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Run Unit Tests with Coverage
      run: |
        coverage run -m pytest tests/unit
        coverage report
        coverage html -d coverage_html  # Generate HTML report
        coverage xml -o coverage.xml  # Generate XML report

    - name: Run Integration Tests with Coverage
      run: |
        coverage run -m pytest tests/integration
        coverage report
        coverage html -d coverage_html_integration
        coverage xml -o coverage_integration.xml

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage_html  # or 'coverage_html_integration' for integration tests

    - name: Enforce Minimum Coverage Threshold
      run: |
        coverage run -m pytest tests
        coverage report --fail-under=80  # Adjust the threshold as needed
        coverage xml -o coverage.xml

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    #- name: Set up Docker Compose
    #  uses: ndeloof/install-compose-action@v0.0.1
    #  with:
    #    legacy: true    # will also install in PATH as `docker-compose`
    #- run: docker-compose --version

    #- name: Build and run services
    #  run: docker-compose up -d --build

    #- name: Run tests
    #  run: docker run --rm app pytest

    - name: Build Docker image
      run: docker build . -t syslog_manager:latest

    - name: Run tests
      run: docker run --rm --network host syslog_manager:latest pytest

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: |
        docker tag syslog_manager:latest ${{ secrets.DOCKER_USERNAME }}/syslog_manager:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/syslog_manager:latest
    
